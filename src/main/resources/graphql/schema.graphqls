type User {
    id: ID!
    firstName: String
    lastName: String
    username: String
    email: String
    password: String
    userSince: String
    score: Int
    imgUrl: String
    isVerified: Boolean
    isDeleted: Boolean
    isBanned: Boolean
    isActive: Boolean
    isAdmin: Boolean
    isPremium: Boolean
    isTrial: Boolean
    isTrialExpired: Boolean
    isTrialActive: Boolean
}

input UserInput {
    firstName: String
    lastName: String
    username: String
    email: String
    password: String
}

input LoginRequest {
    username: String!
    password: String!
}

type AuthResponse {
    accessToken: String!
    refreshToken: String!
}

type Query {
    getAllUsers: [User!]!
    getUserById(id: ID!): User
    getUserByUsername(username: String!): User
}

type Mutation {
    register(user: UserInput!): User!
    updateUser(id: ID!, user: UserInput!): User!
    login(loginRequest: LoginRequest!): AuthResponse!
} 